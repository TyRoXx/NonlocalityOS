name: Rust

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

env:
  CARGO_TERM_COLOR: always
  SCCACHE_GHA_ENABLED: on

jobs:
  build:
    runs-on: ubuntu-22.04
    timeout-minutes: 5
    concurrency:
      # Group by branch
      group: ${{ github.ref }}
      # Cancel any in-progress jobs in this group to avoid wasting time on obsolete commits
      cancel-in-progress: true

    env:
      SCCACHE_VERSION: "v0.8.2"
      SCCACHE_FILENAME: "sccache-v0.8.2-x86_64-unknown-linux-musl.tar.gz"

    steps:
    - uses: actions/checkout@v4

    - name: Cache sccache download
      uses: actions/cache@v4
      with:
        path: |
          ${{ env.SCCACHE_FILENAME }}
        key: ${{ env.SCCACHE_FILENAME }}

    - name: Install sccache
      run: |
        set -e
        if [ ! -f "${{ env.SCCACHE_FILENAME }}" ]; then
          wget https://github.com/mozilla/sccache/releases/download/${{ env.SCCACHE_VERSION }}/${{ env.SCCACHE_FILENAME }}
        fi
        tar -xzf ${{ env.SCCACHE_FILENAME }}
        sudo mv sccache-${{ env.SCCACHE_VERSION }}-x86_64-unknown-linux-musl/sccache /usr/local/bin/
        sccache --version

    - name: Configure sccache
      uses: actions/github-script@v6
      with:
        script: |
          core.exportVariable('ACTIONS_CACHE_URL', process.env.ACTIONS_CACHE_URL || '');
          core.exportVariable('ACTIONS_RUNTIME_TOKEN', process.env.ACTIONS_RUNTIME_TOKEN || '');

    - name: Cache Rust toolset
      uses: actions/cache@v4
      with:
        path: |
          ~/.rustup
        key: rust-${{ runner.os }}-${{ runner.arch }}-${{ hashFiles('**/rust-toolchain.toml') }}

    - name: Cache Cargo output
      uses: actions/cache@v4
      with:
        path: |
          ~/.cargo/bin/
          ~/.cargo/registry/index/
          ~/.cargo/registry/cache/
          ~/.cargo/git/db/
          target/
        key: cargo-test-${{ runner.os }}-${{ runner.arch }}-${{ hashFiles('**/Cargo.lock') }}

    - name: Run tests
      run: cargo test --verbose

    - name: sccache stats
      run: sccache --show-adv-stats
